<?php

/**
 * @file
 * Organic Groups migrate module.
 */

use Drupal\migrate\MigrateSkipRowException;
use Drupal\migrate\Row;
use Drupal\migrate\Plugin\MigrateSourceInterface;
use Drupal\migrate\Plugin\MigrationInterface;

/**
 * Implements hook_migrate_prepare_row().
 *
 * @todo https://www.drupal.org/project/drupal/issues/2952291
 * @todo https://www.drupal.org/node/2952459
 *
 * @throws \Drupal\migrate\MigrateSkipRowException
 */
function og_migrate_migrate_prepare_row(Row $row, MigrateSourceInterface $source, MigrationInterface $migration) {
  // Use the source plugin id instead of the migration id,
  // as the migration id can be altered when using the migration_upgrade module.
  $plugin_id = $source->getPluginId();

  if (in_array($plugin_id, ['d7_field', 'd7_field_instance'])) {
    $field_names = ['og_group_ref', 'og_user_node'];
    if (in_array($row->getSourceProperty('field_name'), $field_names)) {
      throw new MigrateSkipRowException('og-related fields will be migrated separately');
    }
  }

  $entity_type = $row->getSourceProperty('entity_type');
  $bundle = $row->getSourceProperty('bundle');

  if ($entity_type == 'og_membership' && $bundle == 'og_membership_type_default') {
    if ($plugin_id == 'd7_field_instance' && $row->getSourceProperty('field_name') == 'og_membership_request') {
      $fields = \Drupal::service('entity_field.manager')->getFieldDefinitions($entity_type, $bundle);
      if(isset($fields['og_membership_request'])){
        throw new MigrateSkipRowException('the og_membership_request is auto-created in the default group membership type');
      }
    }

    if (in_array($plugin_id, ['d7_field_instance', 'd7_field_instance_per_view_mode', 'd7_field_instance_per_form_display'])) {
      // The "og_membership_type_default" bundle is now "default".
      $row->setSourceProperty('bundle', 'default');
    }
  }
}
